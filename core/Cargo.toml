[package]
name = "mecomp-core"
description = "Core library for the mecomp project, includes the core schemas, shared utils, and other such things."
version.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true
readme.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["analysis"]
rpc = ["tarpc"]
otel_tracing = [
    "tracing-opentelemetry",
    "opentelemetry",
    "opentelemetry_sdk",
    "opentelemetry-semantic-conventions",
    "opentelemetry-otlp",
]
flame = ["tracing-flame"]
verbose_tracing = []
analysis = [
    "dep:rubato",
    "dep:bliss-audio-aubio-rs",
    "dep:ndarray",
    "dep:ndarray-stats",
    "dep:noisy_float",
    "dep:rustfft",
]

# for testing purposes, prevents actual playback of audio which is useful in CI environments where audio playback is not possible
mock_playback = []


[dependencies]
# shared dependencies
env_logger = { workspace = true }
log = { workspace = true }
lazy_static = { workspace = true }
nutype = { workspace = true }
once_cell = { workspace = true }
rand = { workspace = true }
rodio = { workspace = true }
serde = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }
tarpc = { workspace = true, optional = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-opentelemetry = { workspace = true, optional = true }
tracing-flame = { workspace = true, optional = true }
opentelemetry = { workspace = true, optional = true }
opentelemetry_sdk = { workspace = true, optional = true }
opentelemetry-otlp = { workspace = true, optional = true }
opentelemetry-semantic-conventions = { workspace = true, optional = true }

# MECOMP dependencies
mecomp-storage = { workspace = true, features = ["serde"] }
mecomp-workspace-hack = { version = "0.1", path = "../mecomp-workspace-hack" }
one-or-many = { workspace = true }

# dependencies for the analysis feature
rubato = { workspace = true, optional = true }
strum = { version = "0.26.2", features = ["derive"] }
bliss-audio-aubio-rs = { version = "0.2.2", optional = true, features = [
    "static",
] }
ndarray = { version = "0.15.6", optional = true, features = ["rayon"] }
ndarray-stats = { version = "0.5.1", optional = true }
noisy_float = { version = "0.2.0", optional = true }
rustfft = { version = "6.1", optional = true }

[dev-dependencies]
# shared dev dependencies
ndarray-npy = { version = "0.8.1", default-features = false }
anyhow = { workspace = true }
pretty_assertions = { workspace = true }
rstest = { workspace = true }
rstest_reuse = { workspace = true }
tempfile = { workspace = true }
lofty = { workspace = true }
mecomp-storage = { workspace = true, features = ["test_utils"] }
surrealdb = { workspace = true }
adler32 = "1.2"
