
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace]
members = [
    "analysis",
    "cli",
    "core",
    "daemon",
    "mecomp-workspace-hack",
    "one-or-many",
    "storage",
    "surrealqlx/lib",
    "surrealqlx/macros",
    "surrealqlx/macros-impl",
    "tui",
]
exclude = ["external", "target", "assets", "scripts"]
resolver = "2"

[workspace.package]
version = "0.1.3"
edition = "2021"
authors = [
    "Anthony Rubick <68485672+AnthonyMichaelTDM@users.noreply.github.com>",
]
description = "A Metadata Enhanced Collection Orientated Music Player"
repository = "https://github.com/AnthonyMichaelTDM/mecomp"
keywords = ["music", "player", "audio", "mecomp"]
categories = ["multimedia"]
readme = "README.md"
license = "MIT"

[workspace.metadata.cargo-machete]
ignored = ["mecomp-workspace-hack"]


[profile.release]
# debug = true      # for profiling
lto = true
strip = "none"
codegen-units = 1
opt-level = 3

[profile.dev]
lto = false
strip = "none"
opt-level = 0

# [profile.dev.build-override]
# opt-level = 3

[profile.test]
lto = false
strip = "none"
opt-level = 1

[profile.test.package]
insta.opt-level = 3
similar.opt-level = 3

[profile.tarpaulin]
inherits = "test"
opt-level = 0

[workspace.dependencies]
# shared dependencies
anyhow = { version = "1.0", default-features = false }
lofty = { version = "0.22.0" }
clap = { version = "4.5", default-features = false, features = [
    "color",
    "error-context",
    "help",
    "std",
    "usage",
    "suggestions",
    "derive",
] }
config = { version = "0.15.5", default-features = false, features = ["toml"] }
directories = "5.0.1"
env_logger = { version = "0.11.5", features = [
    "color",
], default-features = false }
futures = { version = "0.3.30", features = ["alloc"], default-features = false }
# image = { version = "0.25.0" }
log = { version = "0.4.21", features = ["serde"] }
notify-debouncer-full = { version = "0.5.0", default-features = false }
notify = { version = "8.0", default-features = false, features = [
    "macos_fsevent",
] }
once_cell = "1.19"
rand = { version = "0.8.5", features = ["small_rng"] }
rodio = { version = "0.20.1", features = ["symphonia-all"] }
rubato = { version = "0.16.0" }
serde = { version = "1.0", features = ["derive", "rc"] }
strum = { version = "0.26.3", features = ["derive"] }
surrealdb = { version = "2.1", features = [
    "kv-mem",
    "kv-surrealkv",
], default-features = false }
tap = { version = "1.0" }
thiserror = { version = "2.0" }
tokio = { version = "1.42", features = [
    "macros",
    "rt-multi-thread",
    "sync",
    "time",
] }
walkdir = { version = "2.5" }
tarpc = { version = "0.35.0", features = [
    "serde-transport",
    "serde-transport-json",
    "tcp",
] }
tracing = { version = "0.1.40" }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
tracing-opentelemetry = "0.25.0"
opentelemetry = "0.24.0"
opentelemetry_sdk = { version = "0.24.1", features = ["rt-tokio"] }
opentelemetry-otlp = "0.17.0"
opentelemetry-semantic-conventions = { version = "0.16.0" }
tracing-flame = "0.2.0"

# MECOMP packages
mecomp-analysis = { path = "analysis", version = "0.1.3" }
mecomp-core = { path = "core", default-features = false, version = "0.1.3" }
mecomp-daemon = { path = "daemon", version = "0.1.3" }
mecomp-storage = { path = "storage", default-features = false, version = "0.1.3" }
surrealqlx = { path = "surrealqlx/lib", version = "0.1.0" }
surrealqlx-macros = { path = "surrealqlx/macros", version = "0.1.0" }
surrealqlx-macros-impl = { path = "surrealqlx/macros-impl", version = "0.1.0" }
one-or-many = { path = "one-or-many", version = "0.1.0" }

# shared dev dependencies
pretty_assertions = "1.4"
rstest = "0.24.0"
rstest_reuse = { version = "0.7.0" }
tempfile = { version = "3.10" }
criterion = { version = "0.5.1", features = ["html_reports"] }

# [lints.rust]
# warnings = "deny"

# [lints.clippy]
# all = "deny"
# pedantic = "deny"
# nursery = "deny"
# perf = "deny"
# cargo = "deny"
