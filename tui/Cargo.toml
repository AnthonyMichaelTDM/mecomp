[package]
name = "mecomp-tui"
version.workspace = true
edition.workspace = true
authors.workspace = true
description.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true
readme.workspace = true
license.workspace = true

[[bin]]
name = "mecomp-tui"
test = false
bench = false

[lib]
bench = false

[features]
default = ["autostart-daemon"]
autostart-daemon = []

[dependencies]
anyhow.workspace = true
clap.workspace = true
crossterm = { version = "0.29", features = [
    "bracketed-paste",
    "derive-more",
    "event-stream",
], default-features = false }
ratatui = { version = "0.29" }
# log.workspace = true
tarpc.workspace = true
tokio = { workspace = true, features = ["signal"] }
tokio-stream = "0.1.17"
unicode-width = "0.2.0"

# MECOMP dependencies
one-or-many.workspace = true
mecomp-core = { workspace = true, features = ["rpc"] }
mecomp-storage = { workspace = true, features = ["serde"] }
mecomp-workspace-hack = { version = "0.1", path = "../mecomp-workspace-hack" }

# on windows, we need to use the `windows` crate of `crossterm`
[target.'cfg(target_os = "windows")'.dependencies]
crossterm = { version = "0.29", features = [
    "bracketed-paste",
    "derive-more",
    "windows",
    "event-stream",
], default-features = false }

[dev-dependencies]
pretty_assertions.workspace = true
mecomp-storage = { workspace = true, features = ["serde", "test_utils"] }
mecomp-daemon = { workspace = true }
tempfile = { workspace = true }
surrealdb = { workspace = true }
rstest.workspace = true

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tarpaulin_include)'] }
